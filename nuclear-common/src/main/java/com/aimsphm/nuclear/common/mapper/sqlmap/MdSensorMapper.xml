<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aimsphm.nuclear.common.mapper.MdSensorMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.aimsphm.nuclear.common.entity.MdSensor">
        <result column="id" property="id"/>
        <result column="create_by" property="createBy"/>
        <result column="last_update_by" property="lastUpdateBy"/>
        <result column="last_update_on" property="lastUpdateOn"/>
        <result column="create_on" property="createOn"/>
        <result column="delimit" property="delimit"/>
        <result column="tag_id" property="tagId"/>
        <result column="sub_system_id" property="subSystemId"/>
        <result column="site_id" property="siteId"/>
        <result column="device_id" property="deviceId"/>
        <result column="sensor_name" property="sensorName"/>
        <result column="sensor_desc" property="sensorDesc"/>
        <result column="pi_sensor" property="piSensor"/>
        <result column="system_sensor" property="systemSensor"/>
        <result column="site_sensor" property="siteSensor"/>
        <result column="major" property="major"/>
        <result column="sensor_des" property="sensorDes"/>
        <result column="sensor_des_code" property="sensorDesCode"/>
        <result column="sensor_type" property="sensorType"/>
        <result column="early_warning_hi" property="earlyWarningHi"/>
        <result column="early_warning_lo" property="earlyWarningLo"/>
        <result column="thr_hi" property="thrHi"/>
        <result column="thr_lo" property="thrLo"/>
        <result column="thr_hihi" property="thrHihi"/>
        <result column="thr_lolo" property="thrLolo"/>
        <result column="unit" property="unit"/>
        <result column="cluster_analysis" property="clusterAnalysis"/>
        <result column="importance" property="importance"/>
        <result column="related_group" property="relatedGroup"/>
        <result column="torder" property="torder"/>
        <result column="iswifi" property="iswifi"/>
        <result column="feature_type" property="featureType"/>
        <result column="alias" property="alias"/>
        <result column="main_sensor" property="mainSensor"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        create_by,
        last_update_by,
        last_update_on,
        create_on,
        delimit,
        tag_id, sub_system_id, site_id, device_id, sensor_name, sensor_desc, pi_sensor, system_sensor, site_sensor, major, sensor_des, sensor_des_code, sensor_type, early_warning_hi, early_warning_lo, thr_hi, thr_lo, thr_hihi, thr_lolo, unit, importance, related_group, torder, iswifi, feature_type, alias, main_sensor
    </sql>
    <!--获取所有的测点tag-->
    <select id="selectPointTagsBySubSystemId" resultType="java.lang.String">
        SELECT CONCAT(tag_id,'_',sub_system_id,IF(device_id is NULL ,'',CONCAT('_',device_id))) as `key`
        FROM `md_sensor`
        WHERE 1=1
        <if test="locations != null and 'true'.toString() == locations.toString()">
            AND sensor_des_code IS NOT NULL
        </if>
        <if test="subSystemId != null">
            AND sub_system_id = #{subSystemId}
        </if>
        <if test="deviceId != null">
            AND (device_id = #{deviceId} OR device_id IS NULL )
            AND sub_system_id = (SELECT sub_system_id FROM md_device WHERE id = #{deviceId})
        </if>
    </select>

    <!--获取报警的测点信息-->
    <select id="selectWarmingPointsByDeviceId" resultType="com.aimsphm.nuclear.common.entity.vo.MeasurePointTimesVO">
        SELECT
            count(s.sensor_type) times,
            s.sensor_type        type
        FROM
            md_sensor s
        RIGHT JOIN (
        SELECT
        substring_index( substring_index( a.sensor_tagids, ',', b.help_topic_id + 1 ), ',', - 1 ) tag
        FROM
        tx_alarm_event a
        JOIN mysql.help_topic b ON b.help_topic_id  <![CDATA[<]]>  ( length( a.sensor_tagids ) - length( REPLACE ( a.sensor_tagids, ',', '' ))+ 1 )
        WHERE
        a.device_id = #{deviceId,jdbcType=BIGINT} and UNIX_TIMESTAMP(a.last_alarm)*1000 between #{startTime,jdbcType=BIGINT} AND #{endTime,jdbcType=BIGINT}  ) t
        ON s.tag_id = t.tag
        GROUP BY
        s.sensor_type
    </select>
    <select id="selectTbWarmingPointsByDeviceId"
            resultType="com.aimsphm.nuclear.common.entity.vo.MeasurePointTimesScaleVO">
    SELECT
        count( s.tag_id ) `value`,
        s.related_group `name`
    FROM
        md_sensor s
        RIGHT JOIN (
            SELECT
                substring_index( substring_index( a.sensor_tagids, ',', b.help_topic_id + 1 ), ',', - 1 ) tag
            FROM
                tx_alarm_event a
                JOIN mysql.help_topic b ON b.help_topic_id <![CDATA[<]]> ( length( a.sensor_tagids ) - length( REPLACE ( a.sensor_tagids, ',', '' ))+ 1 )
            WHERE
                a.device_id = #{deviceId,jdbcType=BIGINT} and UNIX_TIMESTAMP(a.last_alarm)*1000 between #{startTime,jdbcType=BIGINT} AND #{endTime,jdbcType=BIGINT}  ) t
            ON s.tag_id = t.tag
    WHERE
	    s.related_group IS NOT NULL AND s.device_id = #{deviceId,jdbcType=BIGINT}
    GROUP BY
        s.related_group
    </select>
</mapper>
