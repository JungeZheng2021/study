<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aimsphm.nuclear.common.mapper.TxAlarmEventMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.aimsphm.nuclear.common.entity.TxAlarmEvent">
        <result column="id" property="id"/>
        <result column="create_by" property="createBy"/>
        <result column="last_update_by" property="lastUpdateBy"/>
        <result column="last_update_on" property="lastUpdateOn"/>
        <result column="create_on" property="createOn"/>
        <result column="delimit" property="delimit"/>
        <result column="alarm_code" property="alarmCode"/>
        <result column="model_id" property="modelId"/>
        <result column="sub_system_id" property="subSystemId"/>
        <result column="device_id" property="deviceId"/>
        <result column="device_name" property="deviceName"/>
        <result column="device_code" property="deviceCode"/>
        <result column="alarm_level" property="alarmLevel"/>
        <result column="last_alarm" property="lastAlarm"/>
        <result column="first_alarm" property="firstAlarm"/>
        <result column="alarm_content" property="alarmContent"/>
        <result column="alarm_status" property="alarmStatus"/>
        <result column="stop_flag" property="stopFlag"/>
        <result column="alarm_type" property="alarmType"/>
        <result column="alarm_reason" property="alarmReason"/>
        <result column="alarm_count" property="alarmCount"/>
        <result column="sensor_tagids" property="sensorTagids"/>
        <result column="is_algorithm_alarm" property="isAlgorithmAlarm"/>
        <result column="alarm_frequency" property="alarmFrequency"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        create_by,
        last_update_by,
        last_update_on,
        create_on,
        delimit,
        alarm_code, model_id, sub_system_id, device_id,device_name, device_code, alarm_level, last_alarm, first_alarm, alarm_content, alarm_status, stop_flag, alarm_count, sensor_tagids, is_algorithm_alarm, alarm_frequency,alarm_type,alarm_reason,remark
    </sql>
    <!--获取设备下所有的报警时间次数-->
    <select id="selectAlarmByAlarmType" resultType="com.aimsphm.nuclear.common.entity.vo.MeasurePointTimesVO">
        SELECT
            count(alarm_type) times,
            alarm_type        type
        FROM
            `tx_alarm_event`
        WHERE
            device_id = #{deviceId,jdbcType=BIGINT}
            and alarm_type &gt; 0
            AND UNIX_TIMESTAMP(last_alarm)*1000 BETWEEN #{startTime,jdbcType=BIGINT}
            AND #{endTime,jdbcType=BIGINT}
        GROUP BY
            alarm_type
    </select>
    <!--获取报警分布-->
    <select id="selectAlarmByLevelType" resultType="com.aimsphm.nuclear.common.entity.vo.MeasurePointTimesVO">
        SELECT
            count(alarm_level) times,
            alarm_level        type
        FROM
            `tx_alarm_event`
        WHERE
            device_id = #{deviceId,jdbcType=BIGINT}
            AND UNIX_TIMESTAMP(last_alarm)*1000 BETWEEN #{startTime,jdbcType=BIGINT}
            AND #{endTime,jdbcType=BIGINT}
        GROUP BY
            alarm_level
    </select>
    <!--根据时间分布进行查询-->
    <select id="selectWarmingPointsByDateDistribution" resultType="long">
        select count(1) `time`
        FROM tx_alarm_event
        WHERE device_id = #{deviceId,jdbcType=BIGINT} AND last_alarm BETWEEN DATE_SUB(NOW(), INTERVAL 1 DAY) AND NOW()
        UNION ALL
        select count(1) `time`
        FROM tx_alarm_event
        WHERE device_id = #{deviceId,jdbcType=BIGINT} AND last_alarm BETWEEN DATE_SUB(NOW(), INTERVAL 3 DAY) AND NOW()
        UNION ALL
        select count(1) `time`
        FROM tx_alarm_event
        WHERE device_id = #{deviceId,jdbcType=BIGINT} AND last_alarm BETWEEN DATE_SUB(NOW(), INTERVAL 7 DAY) AND NOW()
        UNION ALL
        select count(1) `time`
        FROM tx_alarm_event
        WHERE device_id = #{deviceId,jdbcType=BIGINT} AND last_alarm BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()
        UNION ALL
        select count(1) `time`
        FROM tx_alarm_event
        WHERE device_id = #{deviceId,jdbcType=BIGINT} AND last_alarm BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW()
    </select>
</mapper>
