<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aimsphm.nuclear.common.mapper.TxReportMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.aimsphm.nuclear.common.entity.TxReport">
        <result column="id" property="id"/>
        <result column="create_by" property="createBy"/>
        <result column="create_on" property="createOn"/>
        <result column="last_update_by" property="lastUpdateBy"/>
        <result column="last_update_on" property="lastUpdateOn"/>
        <result column="report_name" property="reportName"/>
        <result column="report_time" property="reportTime"/>
        <result column="report_start_time" property="reportStartTime"/>
        <result column="report_end_time" property="reportEndTime"/>
        <result column="report_type" property="reportType"/>
        <result column="report_period" property="reportPeriod"/>
        <result column="report_path" property="reportPath"/>
        <result column="sub_system_id" property="subSystemId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        create_by,
        create_on,
        last_update_by,
        last_update_on,
        report_name, report_type, report_time, report_period, report_path, sub_system_id,report_start_time,report_end_time
    </sql>
    <!--查询时间段内的报警信息记录-->
    <select id="selectAlarmRecordBySubSystemId" resultType="com.aimsphm.nuclear.common.entity.vo.AlarmEventVO">
        SELECT
            t.device_name deviceName,
            t.alarm_content alarmContent,
            t.alarm_type alarmType,
            t.device_code deviceCode,
            t.alarm_level alarmLevel,
            t.alarm_count alarmCount,
            t.last_alarm lastAlarm,
            t.sensor_tagids tagList
        FROM
            `tx_alarm_event` t
        WHERE
            t.sub_system_id =#{subSystemId,jdbcType=BIGINT}
            and t.alarm_type >0 and t.alarm_level >=3
            and UNIX_TIMESTAMP(t.last_alarm)*1000 between #{startTime,jdbcType=BIGINT} AND #{endTime,jdbcType=BIGINT}
            and stop_flag = 0
    </select>

    <!--根据子系统编号查询当前月下所有的主泵健康状态信息-->
    <select id="selectPumpHealthBySubSystemId" resultType="com.aimsphm.nuclear.common.entity.vo.PumpHealthVO">
          SELECT DISTINCT
              t.health_status status,
              t.device_name deviceName,
              t.device_id deviceId,
              UNIX_TIMESTAMP(t.snapshot_time)*1000 `timestamp`
          FROM
             `tx_pumpsnapshot` t
          WHERE
              EXISTS ( SELECT 1 FROM md_device m WHERE t.device_id = m.id AND m.sub_system_id = #{subSystemId,jdbcType=BIGINT})
              AND UNIX_TIMESTAMP(t.snapshot_time)*1000 between #{startTime,jdbcType=BIGINT} AND #{endTime,jdbcType=BIGINT}
          ORDER BY t.snapshot_time
    </select>
    <!--自动报告根据子系统编号查询所有的报警信息-->
    <select id="selectWarmingPointsByDateDistribution4Report"
            resultType="com.aimsphm.nuclear.common.entity.vo.WarmingPointsVO">
        select
            device_name deviceName,
            count(1)    `time`,
            '近一天' as    'type'
        FROM tx_alarm_event
        WHERE sub_system_id = #{subSystemId} AND
              last_alarm BETWEEN  DATE_SUB(#{endDate},  INTERVAL 1 DAY) AND #{endDate}
        GROUP BY device_name

        UNION ALL
        select
            device_name deviceName,
            count(1)    `time`,
            '近三天' as    'type'
        FROM tx_alarm_event
        WHERE sub_system_id = #{subSystemId} AND
              last_alarm BETWEEN  DATE_SUB(#{endDate},  INTERVAL 3 DAY) AND #{endDate}
        GROUP BY device_name

        UNION ALL
        select
            device_name deviceName,
            count(1)    `time`,
            '近一周' as    'type'
        FROM tx_alarm_event
        WHERE sub_system_id = #{subSystemId} AND
              last_alarm BETWEEN  DATE_SUB(#{endDate},  INTERVAL 7 DAY) AND #{endDate}
        GROUP BY device_name

        UNION ALL
        select
            device_name deviceName,
            count(1)    `time`,
            '近半月' as 'type'
        FROM tx_alarm_event
        WHERE sub_system_id = #{subSystemId} AND
              last_alarm BETWEEN  DATE_SUB(#{endDate},  INTERVAL 15 DAY) AND #{endDate}
        GROUP BY device_name

        UNION ALL
        select
            device_name deviceName,
            count(1)    `time`,
            CONCAT('近',${days},'天') as 'type'
        FROM tx_alarm_event
        WHERE sub_system_id = #{subSystemId}  AND
              last_alarm BETWEEN  DATE_SUB(#{endDate},  INTERVAL ${days} DAY) AND #{endDate}
        GROUP BY device_name

    </select>
</mapper>
