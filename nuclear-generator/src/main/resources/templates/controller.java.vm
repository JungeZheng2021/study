package ${cfg.controllerPackage};

import ${package.Entity}.${entity};
import ${package.Entity}.bo.ConditionsQueryBO;
import ${package.Entity}.bo.QueryBO;
#if(${cfg.isCreateExt})
import ${cfg.extPackagePre}.${cfg.service}.${table.serviceName}${cfg.classNameExt};
#else
import ${package.Service}.${table.serviceName};
#end
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.List;

/**
 * <p>
 * 功能描述:$!{table.comment}-前端控制器
 * </p>
 *
 * @author ${author}
 * @version 1.0
 * @since ${date}
 */
#set($path=${table.name})
#set($path=$path.concat("path"))
@RestController
@Api(tags = "$!{cfg.get(${entity})}-$!{table.comment}-相关接口")
@RequestMapping(value = "${cfg.get($path)}", produces = MediaType.APPLICATION_JSON_VALUE)
public class ${table.controllerName} {

    @Resource
#if(${cfg.isCreateExt})
    private ${table.serviceName}${cfg.classNameExt} service;
#else
    private ${table.serviceName} service;
#end

    @GetMapping("list")
    @ApiOperation(value = "$!{table.comment}列表查询", notes = "多条件组合查询")
    public List<${entity}> list${cfg.get(${entity})}WithParams(${entity} entity, ConditionsQueryBO query) {
        return service.list${cfg.get(${entity})}WithParams(new QueryBO(entity, query));
    }

    @GetMapping("pages")
    @ApiOperation(value = "$!{table.comment}分页查询", notes = "多条件组合查询")
    public Page<${entity}> list${cfg.get(${entity})}ByPageWithParams(Page<${entity}> page, ${entity} entity, ConditionsQueryBO query) {
        return service.list${cfg.get(${entity})}ByPageWithParams(new QueryBO(page, entity, query));
    }

    @GetMapping("{id}")
    @ApiOperation(value = "$!{table.comment}获取某一实体")
    public ${entity} get${cfg.get(${entity})}Details(@PathVariable Long id) {
        return service.getById(id);
    }

    @PostMapping
    @ApiOperation(value = "$!{table.comment}新增数据")
    public boolean save${cfg.get(${entity})}(@RequestBody ${entity} dto) {
        return service.save(dto);
    }

    @PutMapping("{id}")
    @ApiOperation(value = "$!{table.comment}修改数据")
    public boolean modify${cfg.get(${entity})}(@RequestBody ${entity} dto, @PathVariable Long id) {
        dto.setId(id);
        return service.updateById(dto);
    }

    @DeleteMapping("batch")
    @ApiOperation(value = "$!{table.comment}批量删除数据")
    public boolean batchRemove${cfg.get(${entity})}(@RequestParam(value = "ids") List<Long> ids) {
        return service.removeByIds(ids);
    }

    @DeleteMapping("{id}")
    @ApiOperation(value = "$!{table.comment}删除数据")
    public boolean remove${cfg.get(${entity})}(@PathVariable Long id) {
        return service.removeById(id);
    }
}